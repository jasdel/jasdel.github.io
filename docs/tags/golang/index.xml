<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Exploring the digital world</title>
    <link>http://localhost:1313/tags/golang/</link>
    <description>Recent content in golang on Exploring the digital world</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 17 Oct 2020 12:00:00 -0700</lastBuildDate><atom:link href="http://localhost:1313/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Verify Payload Checksum with Streaming Reader</title>
      <link>http://localhost:1313/post/verify-payload-checksum-with-streaming-reader/</link>
      <pubDate>Sat, 17 Oct 2020 12:00:00 -0700</pubDate>
      
      <guid>http://localhost:1313/post/verify-payload-checksum-with-streaming-reader/</guid>
      <description>Sometimes you may find your self working with an API gives you the opportunity to validate the integrity of the payload provided through a checksum. There are a few different ways that you could go about validating the integrity of the payload.
Preprocess payload validation One way to do this would be to load the full payload all into memory. Then before consuming the payload your application would compute the checksum of the payload and compare it against the expect value.</description>
    </item>
    
  </channel>
</rss>
